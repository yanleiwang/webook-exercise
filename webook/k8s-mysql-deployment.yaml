apiVersion: apps/v1    # 使用的 Kubernetes API 版本
kind: Deployment       # 对象类型为 Deployment
metadata:              # 元数据定义
  name: webook-mysql   # Deployment 的名称为 "webook-mysql"
  labels:              # 标签定义
    app: webook-mysql  # 添加标签，标签名称为 "app"，标签值为 "webook-mysql"
spec:                  # Deployment 的规格定义
  replicas: 1          # 创建 1 个 Pod 实例
  selector:            # Pod 标签选择器
    matchLabels:       # 匹配标签选择器
      app: webook-mysql # 包含 "app=webook-mysql" 的标签
  template:            # Pod 模板定义
    metadata:          # Pod 元数据定义
      name: webook-mysql     # 生成的 Pod 的名称前缀为 "webook-mysql"
      labels:          # 标签定义
        app: webook-mysql    # 与 Deployment 对象的标签一致
    spec:              # Pod 的规格定义
      containers:      # 容器列表定义
        - name: webook-mysql # 容器名称为 "webook-mysql"
          image: mysql:8.0.29  # 使用镜像 "mysql:8.0.29"
          imagePullPolicy: IfNotPresent  # 镜像拉取策略为如果本地已存在则不重新拉取
          env:           # 环境变量定义
            - name: MYSQL_ROOT_PASSWORD  # 环境变量名为 "MYSQL_ROOT_PASSWORD"
              value: root   # 环境变量值为 "root"
          volumeMounts:  # 挂载卷定义
            - mountPath: /var/lib/mysql  # 挂载路径为 "/var/lib/mysql" 这边要对应到 mysql 的数据存储的位置  这个要对应到用的mysql镜像里的配置
              name: mysql-storage   # 使用名称为 "mysql-storage" 的挂载卷   我 POD 里面有那么多 volumes，我要用哪个
          ports:         # 容器端口定义
            - containerPort: 3306   # 容器监听端口为 3306
      restartPolicy: Always  # 容器失败后总是重启
      volumes:         # 卷定义
        - name: mysql-storage    # 卷名称为 "mysql-storage"
          persistentVolumeClaim:  # 持久卷声明定义
            claimName: webook-mysql-live-claim-v3   # 使用名称为 "webook-mysql-live-claim-v3" 的持久卷声明
