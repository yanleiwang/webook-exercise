// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"gitee.com/geekbang/basic-go/webook/internal/repository"
	"gitee.com/geekbang/basic-go/webook/internal/repository/cache"
	"gitee.com/geekbang/basic-go/webook/internal/repository/dao"
	"gitee.com/geekbang/basic-go/webook/internal/repository/dao/article"
	"gitee.com/geekbang/basic-go/webook/internal/service"
	"gitee.com/geekbang/basic-go/webook/internal/web"
	"gitee.com/geekbang/basic-go/webook/internal/web/jwt"
	"gitee.com/geekbang/basic-go/webook/ioc"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	cmdable := InitRedis()
	handler := jwt.NewJWTHandler(cmdable)
	logger := ioc.InitLogger()
	v := ioc.InitMiddlewares(cmdable, handler, logger)
	gormDB := InitDB()
	userDao := dao.NewUserDaoGorm(gormDB)
	userCache := cache.NewRedisUserCache(cmdable)
	userRepo := repository.NewUserRepoImpl(userDao, userCache)
	userService := service.NewUserServiceImpl(userRepo)
	smsService := ioc.InitSMSService()
	codeCache := cache.NewCodeCacheImpl(cmdable)
	codeRepo := repository.NewCodeRepoImpl(codeCache)
	codeService := service.NewCodeServiceImpl(smsService, codeRepo)
	userHandler := web.NewUserHandler(userService, codeService, handler, logger)
	wechatService := ioc.InitWechatService()
	oAuth2WechatHandler := web.NewOAuth2WechatHandler(wechatService, userService, handler)
	articleDao := article.NewArticleDaoGORM(gormDB)
	articleCache := cache.NewRedisArticleCache(cmdable)
	articleRepository := repository.NewArticleRepository(articleDao, articleCache, logger, userRepo)
	articleService := service.NewArticleService(articleRepository, logger)
	articleHandler := web.NewArticleHandler(articleService, logger)
	engine := ioc.InitWebServer(v, userHandler, oAuth2WechatHandler, articleHandler)
	return engine
}

func InitArticleHandler() *web.ArticleHandler {
	gormDB := InitDB()
	articleDao := article.NewArticleDaoGORM(gormDB)
	cmdable := InitRedis()
	articleCache := cache.NewRedisArticleCache(cmdable)
	logger := ioc.InitLogger()
	userDao := dao.NewUserDaoGorm(gormDB)
	userCache := cache.NewRedisUserCache(cmdable)
	userRepo := repository.NewUserRepoImpl(userDao, userCache)
	articleRepository := repository.NewArticleRepository(articleDao, articleCache, logger, userRepo)
	articleService := service.NewArticleService(articleRepository, logger)
	articleHandler := web.NewArticleHandler(articleService, logger)
	return articleHandler
}

// wire.go:

var thirdProvider = wire.NewSet(InitDB, InitRedis, ioc.InitLogger, jwt.NewJWTHandler)

var userSvcProvider = wire.NewSet(dao.NewUserDaoGorm, cache.NewRedisUserCache, repository.NewUserRepoImpl, service.NewUserServiceImpl)

var articleSvcProvider = wire.NewSet(service.NewArticleService, repository.NewArticleRepository, article.NewArticleDaoGORM, cache.NewRedisArticleCache)

var codeSvcProvider = wire.NewSet(ioc.InitSMSService, cache.NewCodeCacheImpl, repository.NewCodeRepoImpl, service.NewCodeServiceImpl)

var weChatProvider = wire.NewSet(ioc.InitWechatService)
